require('dotenv').config()
const fs = require('fs')
const { VK, Keyboard, MessageContext, Context, VKAppPayloadContext, API } = require('vk-io')
const vk = new VK({ token: process.env.BOT_TOKEN})
const { HearManager } = require('@vk-io/hear')
const hearManager = new HearManager()
const { QuestionManager } = require('vk-io-question')
const questionManager = new QuestionManager()
const mysql = require('mysql')
const conn = mysql.createPool({host: process.env.DB_HOST, user: process.env.DB_USER, password: process.env.DB_PASSWORD, database: process.env.DB_DATABASE, connectionLimit: 7})
vk.updates.use(questionManager.middleware) 
vk.updates.on('message_new', hearManager.middleware)


hearManager.hear(/^–ù–∞—á–∞—Ç—å|–ü—Ä–∏–≤–µ—Ç|hello|Hi|—Ö—ç–ª–ª–æ|—Ö–∞–π|start|—Å—Ç–∞—Ä—Ç/i, async(context) => {
        var exists = "UPDATE `project` SET `search` = '1' WHERE `Vk_ID` = "+ context.senderId
        const link = `https://www.vk.com/id${context.senderId}`
    
         conn.query(exists, (err, res) => {
         if(err) {
             console.log(err)
         }
         else if(res.message[15] == 1) {
            context.send({message: `–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥ —è - –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ —è–∑—ã–∫–µ Python\n–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µüëáüèª`, keyboard: choise})
        }
         else if(res.message[15] == 0) {
            context.send({message: `–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥ —è - –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ —è–∑—ã–∫–µ Python\n–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µüëáüèª`, keyboard: choise})
            var code = "INSERT INTO `project` (`ID`, `Vk_ID`, `Vk_Link`) VALUES (NULL, "+ context.senderId + ", '" + link + "')"
             conn.query(code, (err)=> {
                 if(err) {
                     console.log(err)
                }
             })
         }
       })
})

const choise = Keyboard.keyboard([
	[
        Keyboard.textButton({
			label: `–†–µ—à–∏—Ç—å –∫–≤–∏–∑—ã`,
			color: "primary",
            payload: "Python"
        }),
        Keyboard.textButton({
            label: `–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å`,
            color: "positive"
        })
    ]
])	
.oneTime()


hearManager.hear(/^–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å/i, async(context) => {
    var qwiz = `SELECT * FROM project WHERE Vk_ID = ${context.senderId}`
    conn.query(qwiz, (err, res)=> {
        if(err) {
            console.log(err)
        }
        else {
            if(res[0].Tasks != 0) {
                const percent = res[0].Solved_Tasks / res[0].Tasks * 100
                context.send({message: `–£ —Ç–µ–±—è ${res[0].Points}üåü\n–¢—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ${res[0].Tasks} –≤–æ–ø—Ä–æ—Å–æ–≤\n–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ${res[0].Solved_Tasks}\n–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á: ${percent.toFixed(2)}`, keyboard: back})
            }
            else
                context.send({message: `–£ —Ç–µ–±—è ${res[0].Points}üåü\n–¢—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ${res[0].Tasks} –≤–æ–ø—Ä–æ—Å–æ–≤\n–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ ${res[0].Solved_Tasks}\n–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á: 0`, keyboard: back})
        }
    })
})


const back = Keyboard.keyboard([
    [
        Keyboard.textButton({
            label: `–ù–∞–∑–∞–¥`,
            color: "negative",
            payload: "Back to menu"
        })
    ]
])


hearManager.hear(/^–†–µ—à–∏—Ç—å –∫–≤–∏–∑—ã|–î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º/i, async(context) => {
    //–ù–∞—á–∞–ª–æ —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞
    let numbersArray = createArrayOfNumbers(1,71); //–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å —á–∏—Å–ª–∞–º–∏
    if(numbersArray.length == 0){
        numbersArray = createArrayOfNumbers(1,71);  //–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
    } 
    let randomIndex = getRandomNumber(0, numbersArray.length-1); //–í—ã–±–æ—Ä –∏–Ω–¥–µ–∫—Å–∞
    let number = numbersArray[randomIndex]; //–í—ã–±–æ—Ä —á–∏—Å–ª–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
    numbersArray.splice(randomIndex, 1) //–£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
    //–ö–æ–Ω–µ—Ü —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞
    function run(file) {
        fs.readFile(file, (err, data) => {
            if(err) 
            console.log(err)
            else
            eval(data.toString('utf8'))
        })
        let random_plus = randomIntFromInterval(0, phrases_plus.length - 1)
        let random_minus = randomIntFromInterval(0, phrases_minus.length - 1)
    }
    run(`./questions/${number}/task.js`)
})


const continuetion = Keyboard.keyboard([
    [
        Keyboard.textButton({
            label: `–î–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º`,
            color: "positive",
            payload: "Python"
        }),
        Keyboard.textButton({
            label: `–î–∞–≤–∞–π –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è`,
            color: "negative"
        })
    ]
])
.oneTime()


hearManager.hear(/^–î–∞–≤–∞–π –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è|Stop/i, async(context) => {
    var qwiz = `SELECT * FROM project WHERE Vk_ID = ${context.senderId}`
    conn.query(qwiz, (err, res)=> {
        if(err) {
            console.log(err)
        }
        else
            context.send({message: `–ö–≤–∏–∑ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n–°–µ–π—á–∞—Å —É —Ç–µ–±—è ${res[0].Points}üåü`})
            context.send({message: `–î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!`, keyboard: choise})
    })
})


// –§—Ä–∞–∑—ã –¥–ª—è –ø–ª—é—Å–∞
let phrases_plus = ["–¢—ã –ª—É—á—à–∏–π!", "–ö—Ä—É—Ç–æ!", "–¢—ã –º–æ–ª–æ–¥–µ—Ü!", "–•–æ—Ä–æ—à–æ –ø–æ—Å—Ç–∞—Ä–∞–ª—Å—è!", "–ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç!", "–ü–æ–π–º–∞–ª –≤–æ–ª–Ω—É!", "–ü–æ—Ç—Ä—è—Å–∞—é—â–µ!", "–£—Å–ø–µ—Ö!", "–ú–æ–ª–æ–¥–µ—Ü, –±–ª–µ—Å–Ω—É–ª —É–º–æ–º!", "–ö–∞–∫ –≤—Å–µ–≥–¥–∞ –≤–µ—Ä–Ω–æ!", "–ë–µ–∑–æ—à–∏–±–æ—á–Ω–æ!", "–¢—ã —Å–ª–∏—à–∫–æ–º —É–º—ë–Ω!", "–ü—Ä–æ—Å—Ç–æ —Ñ–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω–æ!", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ", "–í–Ω–µ –≤—Å—è–∫–∏—Ö –ø–æ—Ö–≤–∞–ª", "–£ —Ç–µ–±—è –≤—ã—à–ª–æ!", "–ü—Ä–æ—Å—Ç–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ", "–ë—Ä–∞–≤–æ!", "–°–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω–æ!", "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞!", "–¢—ã —Å–¥–µ–ª–∞–ª —ç—Ç–æ!", "–°–Ω–∏–º–∞—é —à–ª—è–ø—É"]

//–§—Ä–∞–∑—ã –¥–ª—è –º–∏–Ω—É—Å–∞
let phrases_minus = ["–≠—Ö, –Ω–µ–≤–µ—Ä–Ω–æ", "–í–æ–æ–±—â–µ-—Ç–æ –Ω–µ—Ç"]


//–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞
function randomIntFromInterval(min, max) { // min and max included 
  return Math.floor(Math.random() * (max - min + 1) + min)
}

//–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞
function getRandomNumber(min, max) {
    let step1 = max - min + 1;
    let step2 = Math.random() * step1;
    let result = Math.floor(step2) + min;
    return result;
}
function createArrayOfNumbers(start, end){
    let myArray = [];
    for(let i = start; i <= end; i++) { 
        myArray.push(i);
    }
    return myArray;
}
//–ö–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞

hearManager.hear(/^–ù–∞–∑–∞–¥/i, async(context) => {
    if(context.messagePayload == "Back to menu") {
        context.send({message: `–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥ —è - –ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ —è–∑—ã–∫–µ Python\n–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µüëáüèª`, keyboard: choise})
    }
})

async function run() {
    await vk.updates.start();
    console.log("LESSSS GOOOOOOOOOOOO");
}

run().catch(console.error);